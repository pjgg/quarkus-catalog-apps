apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ template "name" . }}
  template:
    metadata:
      labels:
        name: {{ template "name" . }}
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: {{ .Values.database.url }}
            - name: QUARKUS_DATASOURCE_USERNAME
              value: {{ .Values.database.user }}
            - name: QUARKUS_DATASOURCE_PASSWORD
              value: {{ .Values.database.pwd }}
            - name: QUARKUS_HIBERNATE-ORM_DATABASE_DEFAULT-SCHEMA
              value: {{ .Values.database.schema }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrap }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /health/ready
              port: {{ .Values.service.internalPort }}
          resources:
  {{ toYaml .Values.resources | indent 12 }}
  {{- if .Values.nodeSelector }}
nodeSelector:
  {{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}